
dataroot: "/content/drive/MyDrive/CycleGAN/monet2photo"  # Required: path to images (should have subfolders trainA, trainB, valA, valB, etc)
name: "experiment_name"  # Default: name of the experiment. It decides where to store samples and models
gpu_ids: "0"  # Default: gpu ids: e.g. 0  0,1,2, 0,2. use -1 for CPU
checkpoints_dir: "./checkpoints"  # Default: models are saved here

input_nc: 3  # Default: # of input image channels: 3 for RGB and 1 for grayscale
output_nc: 3  # Default: # of output image channels: 3 for RGB and 1 for grayscale
ngf: 64  # Default: # of gen filters in the last conv layer
ndf: 64  # Default: # of discrim filters in the first conv layer
netD: "basic"  # Default: specify discriminator architecture [basic | n_layers | pixel]
netG: "resnet_9blocks"  # Default: specify generator architecture [resnet_9blocks | resnet_6blocks | unet_256 | unet_128]
n_layers_D: 3  # Default: only used if netD==n_layers
norm: "instance"  # Default: instance normalization or batch normalization [instance | batch | none]
init_type: "normal"  # Default: network initialization [normal | xavier | kaiming | orthogonal]
init_gain: 0.02  # Default: scaling factor for normal, xavier and orthogonal
no_dropout: false  # Default: no dropout for the generator

dataset_mode: "unaligned"  # Default: chooses how datasets are loaded. [unaligned | aligned | single | colorization]
direction: "AtoB"  # Default: AtoB or BtoA
serial_batches: false  # Default: if true, takes images in order to make batches, otherwise takes them randomly
num_threads: 4  # Default: # threads for loading data
batch_size: 1  # Default: input batch size
load_size: 286  # Default: scale images to this size
crop_size: 256  # Default: then crop to this size
max_dataset_size: float("inf")  # Default: Maximum number of samples allowed per dataset
preprocess: "resize_and_crop"  # Default: scaling and cropping of images at load time
no_flip: false  # Default: if specified, do not flip the images for data augmentation
display_winsize: 256  # Default: display window size for both visdom and HTML


epoch: "latest"  # Default: which epoch to load? set to latest to use latest cached model
load_iter: 0  # Default: which iteration to load? if load_iter > 0, the code will load models by iter_[load_iter]; otherwise, the code will load models by [epoch]
verbose: false  # Default: if specified, print more debugging information
suffix: ""  # Default: customized suffix: opt.name = opt.name + suffix: e.g., {model}_{netG}_size{load_size}

display_freq: 400  # Default: frequency of showing training results on screen
display_ncols: 4  # Default: if positive, display all images in a single visdom web panel with certain number of images per row
display_id: 1  # Default: window id of the web display
display_server: "http://localhost"  # Default: visdom server of the web display
display_env: "main"  # Default: visdom display environment name (default is "main")
display_port: 8097  # Default: visdom port of the web display
update_html_freq: 1000  # Default: frequency of saving training results to html
print_freq: 100  # Default: frequency of showing training results on console
no_html: false  # Default: do not save intermediate training results to [opt.checkpoints_dir]/[opt.name]/web/
save_latest_freq: 5000  # Default: frequency of saving the latest results
save_epoch_freq: 5  # Default: frequency of saving checkpoints at the end of epochs
save_by_iter: false  # Default: whether saves model by iteration
continue_train: false  # Default: continue training: load the latest model
epoch_count: 1  # Default: the starting epoch count, we save the model by <epoch_count>, <epoch_count>+<save_latest_freq>, ...
phase: "train"  # Default: train, val, test, etc
n_epochs: 60  # Default: number of epochs with the initial learning rate
n_epochs_decay: 40  # Default: number of epochs to linearly decay learning rate to zero
beta1: 0.5  # Default: momentum term of adam
lr: 0.0002  # Default: initial learning rate for adam
gan_mode: "lsgan"  # Default: the type of GAN objective. [vanilla| lsgan | wgangp]
pool_size: 50  # Default: the size of image buffer that stores previously generated images
lr_policy: "linear"  # Default: learning rate policy. [linear | step | plateau | cosine]
lr_decay_iters: 50  # Default: multiply by a gamma every lr_decay_iters iterations

results_dir: "./results/"  # Default: saves results here
aspect_ratio: 1.0  # Default: aspect ratio of result images
phase: "test"  # Default: train, val, test, etc
eval: false  # Default: use eval mode during test time
num_test: 50  # Default: how many test images to run
model: "test"  # Default: model type for testing
load_size: 256  # Default: To avoid cropping, the load_size should be the same as crop_size